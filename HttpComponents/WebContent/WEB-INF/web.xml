<?xml version="1.0" encoding="utf-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">


	<display-name>SpringMVC</display-name>
	
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<error-page>
		<error-code>500</error-code>
<!-- <exception-type>java.lang.NullPointerException</exception-type> -->   <!-- 还有一种配置是指定异常跳转 -->
		<location>/WEB-INF/jsp/common/errorPage.jsp</location>
	</error-page>

	<!-- 基础总配置文件位置 -->
	<!-- application范围内的参数，存放在ServletContext中 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
  			<!--加入Spring总体配置文件-->
			classpath:config/applicationContext.xml
			<!-- /WEB-INF/classes/applicationContext.xml,/WEB-INF/classes/spring-srevlet.xml -->
		</param-value>
	</context-param>

	<!-- Spring监听器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- log4j configuration load -->
	 <servlet> 
		<servlet-name>log4jInit</servlet-name> 
		<servlet-class>config.log.Log4jInit</servlet-class> 
		<init-param> 
			<param-name>log4j-config-file</param-name> 
			<param-value>/WEB-INF/classes/config/log/log4j.properties</param-value> 
		</init-param> 
		<load-on-startup>1</load-on-startup> 
	</servlet> 
	
	
		<!--  配置Spring框架自身的拦截器 解决乱码问题  --> 
     <filter>
		<filter-name>SpringCharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter> 
	
	<filter-mapping>
		<filter-name>SpringCharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<servlet>
		<!-- DispatcherServlet会默认加载WEB-INF/[DispatcherServlet的Servlet名字]-servlet.xml配置文件 -->
		<servlet-name>springServlet</servlet-name>
		<!-- 把所有请求交给Spring Web MVC框架处理 -->
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<!-- 下面的配置最好直接在一行,且不要有空格,如果输成 "classpath:空格config/applicationContext.xml"  By朱青 -->
			<!-- 将会报错:org.xml.sax.SAXParseException: Content is not allowed in prolog.  -->
			<param-value>	classpath:config/spring/springMVC.xml</param-value>
		</init-param>
		 <load-on-startup>1</load-on-startup> 
		<!-- 1)load-on-startup元素标记容器是否在启动的时候就加载这个servlet(实例化并调用其init()方法)。
		2)它的值必须是一个整数，表示servlet应该被载入的顺序
		2)当值为0或者大于0时，表示容器在应用启动时就加载并初始化这个servlet；
		3)当值小于0或者没有指定时，则表示容器在该servlet被选择时才会去加载。
		4)正数的值越小，该servlet的优先级越高，应用启动时就越先加载。
		5)当值相同时，容器就会自己选择顺序来加载。 -->
	</servlet>
	<servlet-mapping>
		<servlet-name>springServlet</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	
	<!-- session超时 -->
	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>
</web-app>